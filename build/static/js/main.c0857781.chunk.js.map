{"version":3,"sources":["Component/bot.js","Component/main.js","Component/Home.js","Component/search.js","App.js","serviceWorker.js","index.js"],"names":["Bot","state","tamps","time","val","console","log","Date","toUTCString","slice","icon","id","size","nc","_this2","this","axios","get","then","res","setState","data","list","_this3","react_default","a","createElement","lib_default","infinite","slidesToShow","slidesToScroll","centerMode","responsive","breakpoint","settings","arrows","centerPadding","map","temp","key","dt","className","dt_txt","Math","trunc","main","weather","description","React","Component","Main","nord","props","location","r","name","sunset","sys","wind","speed","type","react_router_dom","to","Home","aux","info","bot","x","keyEnter","event","target","value","localStorage","setItem","length","Search","onKeyPress","pathname","getItem","App","react_router","path","process","exact","component","Boolean","window","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c0857781.chunk.js","sourcesContent":["import React from 'react';\r\nimport './black.css';\r\nimport Slider from \"react-slick\";\r\nimport axios from 'axios';\r\n\r\nclass Bot extends React.Component {\r\n  state = {\r\n    tamps : []\r\n  }\r\n    componentDidMount(){\r\n    axios.get(\"https://openweathermap.org/data/2.5/forecast/hourly?id=2464470&appid=b6907d289e10d714a6e88b30761fae22\")\r\n       .then(res => {\r\n      \r\n       \r\n         this.setState({\r\n           tamps: res.data.list\r\n         })\r\n       })\r\n  }\r\n  /*time*/\r\ntime = (val) => {\r\n  console.log();\r\n  \r\n  var dateObj = new Date(val * 1000); \r\n  var utcString = dateObj.toUTCString(); \r\n  var r = utcString.slice(-12, -7); \r\n \r\nreturn r ;\r\n};\r\n\r\n/*time*/\r\n/*image*/\r\nicon = (id,size) => {\r\n  var nc=\" \";\r\n\r\n  switch (id) {\r\n      case \"clear sky\":\r\n        nc = \"fas fa-sun\";\r\n        break;\r\n      case \"few clouds\":\r\n        nc = \"fas fa-cloud-sun\";\r\n        break;\r\n      case \"scattered clouds\":\r\n        nc = \"fas fa-cloud\";\r\n        break;\r\n         case \"broken clouds\":\r\n        nc = \"fas fa-cloud\";\r\n        break;\r\n       case \"shower rain\":\r\n        nc = \"fas fa-cloud-showers-heavy\";\r\n        break;\r\n        case \"rain\":\r\n        nc = \"fas fa-cloud-sun-rain\";\r\n        break;\r\n        case \"thunderstorm\":\r\n          nc = \"fas fa-cloud-meatball\";\r\n          break;             \r\n        case \"snow\":\r\n          nc = \"far fa-snowflake\";\r\n          break;\r\n          case \"mist\":\r\n              nc = \"fas fa-smog\";\r\n              break;\r\n    \r\n\r\n\r\n\r\n        default:\r\n          nc= \"iundefined\";\r\n    }\r\n\r\n var r=nc+\" \"+size+\" color\";\r\nreturn r ;\r\n}\r\n/*icon */\r\n    render() {\r\n      var settings = {\r\n        infinite: true,\r\n        slidesToShow: 3,\r\n        slidesToScroll: 1,\r\n        centerMode: true,\r\n        responsive: [\r\n            {\r\n              breakpoint: 100,\r\n              settings: {\r\n                arrows: false,\r\n                centerMode: true,\r\n                centerPadding: '40px',\r\n                slidesToShow: 3\r\n              }\r\n            },\r\n            {\r\n              breakpoint: 50,\r\n              settings: {\r\n                arrows: false,\r\n                centerMode: true,\r\n                centerPadding: '60px',\r\n                slidesToShow: 0\r\n              }\r\n            }\r\n          ]\r\n        \r\n      };\r\n      return (\r\n        \r\n        <Slider {...settings}>\r\n  \r\n          {this.state.tamps.slice(0, 8).map(temp => <div key={temp.dt}><div className=\"sb\"> \r\n          <div className=\"centre col\">\r\n          <div className=\"fontmini  \">{temp.dt_txt.slice(0,10)}</div>\r\n          <div className=\"fontmini  \">{this.time(temp.dt)}</div>\r\n              \r\n              <div className=\"font  margin10 \"  >{Math.trunc(temp.main.temp)+\"Â°C\"}</div>\r\n             \r\n              <div><hr></hr></div>\r\n              <div className=\" margin10 \"><i className={this.icon(temp.weather[0].description,\"fa-2x\")}></i></div>\r\n              <div className=\"row\">\r\n               \r\n              </div>\r\n\r\n           </div> \r\n          </div>\r\n          </div>)}\r\n          \r\n\r\n        \r\n       \r\n        </Slider>\r\n        \r\n      );\r\n    }\r\n  }\r\n \r\n  export default Bot;","import React from 'react';\r\nimport './black.css';\r\nimport axios from 'axios';\r\nimport {Link} from 'react-router-dom'\r\n\r\nclass Main extends React.Component {\r\n/*GET */\r\nstate={  \r\n}\r\n\r\n\r\ncomponentDidMount() {\r\n  console.log(this.props.location);\r\n  var r=\"https://openweathermap.org/data/2.5/weather?\"+this.props.location+\"&appid=b6907d289e10d714a6e88b30761fae22\"\r\n  console.log(r);\r\n    axios.get(r)\r\n   .then(res => {\r\n    \r\n       this.setState({\r\n          name : res.data.name,\r\n          temp:  res.data.main.temp,\r\n          sunset: res.data.sys.sunset,\r\n          wind:res.data.wind.speed,\r\n          type :res.data.sys.type,\r\n          icon :res.data.weather[0].description\r\n           \r\n       })\r\n   })\r\n  \r\n}\r\n\r\n/*GET*/\r\n\r\n\r\n/*time*/\r\ntime = (val) => {\r\n    var dateObj = new Date(val * 1000); \r\n    var utcString = dateObj.toUTCString(); \r\n    var r = utcString.slice(-12, -7); \r\n   \r\n  return r ;\r\n  };\r\n  \r\n\r\n/*time*/\r\n/*NORD */\r\n\r\nnord = (val) => {\r\n    var r=\"\";\r\n if (val === 1) {\r\n     r=\"Today\";\r\n } \r\n else {\r\n    r=\"Tonightaaaa\";\r\n     \r\n }\r\n return r ;\r\n}\r\n\r\n/*NORD*/\r\n\r\n/*image*/\r\nicon = (id,size) => {\r\n    var nc=\" \";\r\n  \r\n    switch (id) {\r\n        case \"clear sky\":\r\n          nc = \"fas fa-sun\";\r\n          break;\r\n        case \"few clouds\":\r\n          nc = \"fas fa-cloud-sun\";\r\n          break;\r\n        case \"scattered clouds\":\r\n          nc = \"fas fa-cloud\";\r\n          break;\r\n           case \"broken clouds\":\r\n          nc = \"fas fa-cloud\";\r\n          break;\r\n         case \"shower rain\":\r\n          nc = \"fas fa-cloud-showers-heavy\";\r\n          break;\r\n          case \"rain\":\r\n          nc = \"fas fa-cloud-sun-rain\";\r\n          break;\r\n          case \"thunderstorm\":\r\n            nc = \"fas fa-cloud-meatball\";\r\n            break;             \r\n          case \"snow\":\r\n            nc = \"far fa-snowflake\";\r\n            break;\r\n            case \"mist\":\r\n                nc = \"fas fa-smog\";\r\n                break;\r\n      \r\n  \r\n  \r\n\r\n          default:\r\n            nc= \"iundefined\";\r\n      }\r\n\r\n   var r=nc+\" \"+size+\" color\";\r\n  return r ;\r\n}\r\n/*icon */\r\n    render() { \r\n        return ( \r\n            <div>\r\n\r\n            <div>\r\n\r\n              <div className=\"centre \" >\r\n                \r\n               <p className=\"font\">{this.state.name} <i className=\"far fa-building\"></i></p>\r\n                   </div>\r\n                  <div className=\"centre\" >\r\n                  <p className=\"fontmini\">{this.nord(this.state.type)}</p>  \r\n                  </div>\r\n                  \r\n               \r\n                  <Link to=\"/\">search</Link>\r\n\r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n            <div className=\"centre margin15\">\r\n            <i className={this.icon(this.state.icon,\"fa-10x\")}></i>\r\n                </div>\r\n\r\n\r\n\r\n\r\n\r\n<div className=\"row centre  \"> \r\n        <div className=\"col\">\r\n            <div className=\"col centre\">\r\n               <span className=\"fontmini\"> sunset</span>\r\n                </div>\r\n                <div className=\"col center\">\r\n\r\n                <span className=\"font\">{this.time(this.state.sunset)}</span>\r\n                    </div>\r\n\r\n            </div>\r\n\r\n\r\n            <div className=\"col\">\r\n            <div className=\"col centre\">\r\n               <span className=\"fontmini\">Avg temp</span>\r\n                </div>\r\n                <div className=\"col center\">\r\n\r\n                <span className=\"font\">{Math.trunc(this.state.temp)+\"Â°C\"}</span>\r\n                    </div>\r\n\r\n            </div>\r\n\r\n\r\n        \r\n\r\n            <div className=\"col\">\r\n            <div className=\"col centre\">\r\n               <span className=\"fontmini\"> Wind</span>\r\n                </div>\r\n                <div className=\"col center\">\r\n\r\n                <span className=\"font\"> {this.state.wind}</span>\r\n                    </div>\r\n\r\n            </div>\r\n</div>\r\n            \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            </div>\r\n\r\n         );\r\n    }\r\n}\r\n \r\nexport default Main;","import React from 'react';\r\nimport './black.css';\r\nimport Bot from './bot';\r\nimport Main from './main';\r\nconst Home = (aux) => {\r\n    return (\r\n        <div>\r\n        <div className=\"bg\"><Main location={\"q=\"+aux.location.state.info} /></div>\r\n       <div className=\"bgb\"> <Bot/></div>\r\n       </div>\r\n    );\r\n} \r\nexport default Home;","import React from 'react';\r\nimport './black.css';\r\nimport {Link} from 'react-router-dom'\r\nlet x = \"\";\r\nconst keyEnter = (event) => {\r\n    \r\n    if (event.key === \"Enter\") {\r\n       x=event.target.value;\r\n      localStorage.setItem(localStorage.length+1, x);\r\n      event.target.value=\"\"\r\n    }\r\n  }\r\n\r\n  \r\n\r\n  \r\n const Search = () => {\r\n     return (\r\n     <div className=\"bgs\">\r\n         <div className=\"container\">\r\n             <div className=\"centre\">\r\n         <label  className=\"font\">search</label>\r\n         <input type=\"text\" id=\"search\" name=\"search\"   onKeyPress={keyEnter}></input>\r\n         </div>\r\n\r\n     <Link to={{pathname:`/Home/`,state:{info:localStorage.getItem(\"1\")}}}>\r\n         <div className=\"box font\">\r\n    {localStorage.getItem(\"1\")}\r\n         </div>\r\n         </Link>\r\n         \r\n    \r\n         \r\n</div>\r\n     </div>)\r\n }\r\nexport default Search;","import React from 'react';\r\nimport Home from './Component/Home'\r\nimport Search from './Component/search'\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\n\r\nclass App extends  React.Component {\r\n  \r\n\r\n  \r\n  render() { \r\nreturn( \r\n  <Router>\r\n  <Route path={process.env.PUBLIC_URL+\"/\"} exact component={Search} />\r\n  <Route path={process.env.PUBLIC_URL+\"/Home/\"} exact component={Home} />\r\n  </Router>\r\n );\r\n  }\r\n}\r\n \r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}