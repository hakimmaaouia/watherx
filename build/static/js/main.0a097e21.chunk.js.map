{"version":3,"sources":["Component/bot.js","Component/main.js","Component/Home.js","Component/search.js","App.js","serviceWorker.js","index.js"],"names":["Bot","state","tamps","time","val","Date","toUTCString","slice","icon","id","size","nc","_this2","this","r","props","location","console","log","axios","get","then","res","setState","data","list","_this3","react_default","a","createElement","lib_default","infinite","slidesToShow","slidesToScroll","centerMode","responsive","breakpoint","settings","arrows","centerPadding","map","temp","key","dt","className","dt_txt","Math","trunc","main","weather","description","React","Component","Main","nord","name","sunset","sys","wind","speed","type","react_router_dom","to","style","marginTop","Home","aux","info","bot","Search","car","JSON","parse","localStorage","getItem","_useState","useState","_useState2","Object","slicedToArray","count","setCount","useEffect","x","onKeyPress","event","target","value","concat","toConsumableArray","setItem","stringify","random","pathname","color","textAlign","App","react_router","path","exact","component","Boolean","window","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"kSAsIeA,6MAhIbC,MAAQ,CACNC,MAAO,MAiBTC,KAAO,SAAAC,GAOL,OAJc,IAAIC,KAAW,IAAND,GACCE,cACNC,OAAO,IAAK,MAOhCC,KAAO,SAACC,EAAIC,GACV,IAAIC,EAAK,IAET,OAAQF,GACN,IAAK,YACHE,EAAK,aACL,MACF,IAAK,aACHA,EAAK,mBACL,MACF,IAAK,mBAGL,IAAK,gBACHA,EAAK,eACL,MACF,IAAK,cACHA,EAAK,6BACL,MACF,IAAK,OACHA,EAAK,wBACL,MACF,IAAK,eACHA,EAAK,wBACL,MACF,IAAK,OACHA,EAAK,mBACL,MACF,IAAK,OACHA,EAAK,cACL,MAEF,QACEA,EAAK,aAIT,OADQA,EAAK,IAAMD,EAAO,6FA/DR,IAAAE,EAAAC,KACdC,EACF,uDACAD,KAAKE,MAAMC,SACX,0CACFC,QAAQC,IAAIJ,GACZK,IAAMC,IAAIN,GAAGO,KAAK,SAAAC,GAChBV,EAAKW,SAAS,CACZrB,MAAOoB,EAAIE,KAAKC,0CA2Db,IAAAC,EAAAb,KA2BP,OACEc,EAAAC,EAAAC,cAACC,EAAAF,EA3BY,CACbG,UAAU,EACVC,aAAc,EACdC,eAAgB,EAChBC,YAAY,EACZC,WAAY,CACV,CACEC,WAAY,IACZC,SAAU,CACRC,QAAQ,EACRJ,YAAY,EACZK,cAAe,OACfP,aAAc,IAGlB,CACEI,WAAY,GACZC,SAAU,CACRC,QAAQ,EACRJ,YAAY,EACZK,cAAe,OACfP,aAAc,MAOjBnB,KAAKZ,MAAMC,MAAMK,MAAM,EAAG,GAAGiC,IAAI,SAAAC,GAAI,OACpCd,EAAAC,EAAAC,cAAA,OAAKa,IAAKD,EAAKE,IACbhB,EAAAC,EAAAC,cAAA,OAAKe,UAAU,MACbjB,EAAAC,EAAAC,cAAA,OAAKe,UAAU,cACbjB,EAAAC,EAAAC,cAAA,OAAKe,UAAU,cAAcH,EAAKI,OAAOtC,MAAM,EAAG,KAClDoB,EAAAC,EAAAC,cAAA,OAAKe,UAAU,cAAclB,EAAKvB,KAAKsC,EAAKE,KAE5ChB,EAAAC,EAAAC,cAAA,OAAKe,UAAU,mBACZE,KAAKC,MAAMN,EAAKO,KAAKP,MAAQ,SAGhCd,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,YAEFF,EAAAC,EAAAC,cAAA,OAAKe,UAAU,cACbjB,EAAAC,EAAAC,cAAA,KACEe,UAAWlB,EAAKlB,KAAKiC,EAAKQ,QAAQ,GAAGC,YAAa,YAGtDvB,EAAAC,EAAAC,cAAA,OAAKe,UAAU,qBAvHbO,IAAMC,mBC8ITC,6MA5IbpD,MAAQ,KAuBRE,KAAO,SAAAC,GAKL,OAJc,IAAIC,KAAW,IAAND,GACCE,cACNC,OAAO,IAAK,MAQhC+C,KAAO,SAAAlD,GAOL,OALY,IAARA,EACE,QAEA,iBAQRI,KAAO,SAACC,EAAIC,GACV,IAAIC,EAAK,IAET,OAAQF,GACN,IAAK,YACHE,EAAK,aACL,MACF,IAAK,aACHA,EAAK,mBACL,MACF,IAAK,mBAGL,IAAK,gBACHA,EAAK,eACL,MACF,IAAK,cACHA,EAAK,6BACL,MACF,IAAK,OACHA,EAAK,wBACL,MACF,IAAK,eACHA,EAAK,wBACL,MACF,IAAK,OACHA,EAAK,mBACL,MACF,IAAK,OACHA,EAAK,cACL,MAEF,QACEA,EAAK,aAIT,OADQA,EAAK,IAAMD,EAAO,6FAjFR,IAAAE,EAAAC,KACdC,EACF,+CACAD,KAAKE,MAAMC,SACX,0CACFC,QAAQC,IAAIJ,GACZK,IAAMC,IAAIN,GAAGO,KAAK,SAAAC,GAChBV,EAAKW,SAAS,CACZgC,KAAMjC,EAAIE,KAAK+B,KACfd,KAAMnB,EAAIE,KAAKwB,KAAKP,KACpBe,OAAQlC,EAAIE,KAAKiC,IAAID,OACrBE,KAAMpC,EAAIE,KAAKkC,KAAKC,MACpBC,KAAMtC,EAAIE,KAAKiC,IAAIG,KACnBpD,KAAMc,EAAIE,KAAKyB,QAAQ,GAAGC,iDAyE9B,OACEvB,EAAAC,EAAAC,cAAA,WACOF,EAAAC,EAAAC,cAAA,WACLF,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CAAMC,GAAG,KAAT,WAEAnC,EAAAC,EAAAC,cAAA,OAAKe,UAAU,OACbjB,EAAAC,EAAAC,cAAA,OAAKe,UAAU,cACbjB,EAAAC,EAAAC,cAAA,KAAGe,UAAU,QACV/B,KAAKZ,MAAMsD,KADd,IACoB5B,EAAAC,EAAAC,cAAA,KAAGe,UAAU,qBAEjCjB,EAAAC,EAAAC,cAAA,KAAGe,UAAU,YAAY/B,KAAKyC,KAAKzC,KAAKZ,MAAM2D,SAKlDjC,EAAAC,EAAAC,cAAA,OAAKe,UAAU,mBACbjB,EAAAC,EAAAC,cAAA,KAAGe,UAAW/B,KAAKL,KAAKK,KAAKZ,MAAMO,KAAM,aAG3CmB,EAAAC,EAAAC,cAAA,OAAKe,UAAU,eAAemB,MAAO,CAACC,UAAU,OAC9CrC,EAAAC,EAAAC,cAAA,OAAKe,UAAU,OACbjB,EAAAC,EAAAC,cAAA,OAAKe,UAAU,cACbjB,EAAAC,EAAAC,cAAA,QAAMe,UAAU,YAAhB,YAEFjB,EAAAC,EAAAC,cAAA,OAAKe,UAAU,cACbjB,EAAAC,EAAAC,cAAA,QAAMe,UAAU,QAAQ/B,KAAKV,KAAKU,KAAKZ,MAAMuD,WAIjD7B,EAAAC,EAAAC,cAAA,OAAKe,UAAU,OACbjB,EAAAC,EAAAC,cAAA,OAAKe,UAAU,cACbjB,EAAAC,EAAAC,cAAA,QAAMe,UAAU,YAAhB,aAEFjB,EAAAC,EAAAC,cAAA,OAAKe,UAAU,cACbjB,EAAAC,EAAAC,cAAA,QAAMe,UAAU,QAAQE,KAAKC,MAAMlC,KAAKZ,MAAMwC,MAAQ,WAI1Dd,EAAAC,EAAAC,cAAA,OAAKe,UAAU,OACbjB,EAAAC,EAAAC,cAAA,OAAKe,UAAU,cACbjB,EAAAC,EAAAC,cAAA,QAAMe,UAAU,YAAhB,UAEFjB,EAAAC,EAAAC,cAAA,OAAKe,UAAU,cACbjB,EAAAC,EAAAC,cAAA,QAAMe,UAAU,QAAhB,IAAyB/B,KAAKZ,MAAMyD,iBArI/BP,IAAMC,WCYVa,EAbF,SAAAC,GACX,OACEvC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKe,UAAU,MACbjB,EAAAC,EAAAC,cAACmB,EAAD,CAAMhC,SAAU,KAAOkD,EAAIlD,SAASf,MAAMkE,QAE5CxC,EAAAC,EAAAC,cAAA,OAAKe,UAAU,OACZ,IACDjB,EAAAC,EAAAC,cAACuC,EAAD,CAAKpD,SAAU,KAAOkD,EAAIlD,SAASf,MAAMkE,0BCmDlCE,EA1DA,WACb,IAAIC,EACJA,EAAMC,KAAKC,MAAMC,aAAaC,QAAQ,MAFnB,IAAAC,EAIOC,mBAAS,IAJhBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAIZK,EAJYH,EAAA,GAILI,EAJKJ,EAAA,GAKnBK,oBAAU,WACRD,EAASX,IACR,IAEH,IAAIa,EAAI,GAcR,OACExD,EAAAC,EAAAC,cAAA,OAAKe,UAAU,OACbjB,EAAAC,EAAAC,cAAA,OAAKe,UAAU,aACbjB,EAAAC,EAAAC,cAAA,OAAKe,UAAU,UACbjB,EAAAC,EAAAC,cAAA,SAAOe,UAAU,QAAjB,UACAjB,EAAAC,EAAAC,cAAA,SACE+B,KAAK,OACLnD,GAAG,SACH8C,KAAK,SACL6B,WAtBO,SAAAC,GACG,UAAdA,EAAM3C,MACRyC,EAAIE,EAAMC,OAAOC,MAEfN,EADY,OAAVD,EACO,CAACG,GAEF,GAAAK,OAAAV,OAAAW,EAAA,EAAAX,CAAKE,GAAL,CAAYG,KAEtBV,aAAaiB,QAAQ,IAAKnB,KAAKoB,UAAUX,IACzCK,EAAMC,OAAOC,MAAQ,QAiBlBP,EACCA,EAAMxC,IAAI,SAAAC,GACR,OACEd,EAAAC,EAAAC,cAAA,OAAKa,IAAqB,IAAhBI,KAAK8C,SAAgBhD,UAAU,OACvCjB,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CACEC,GAAI,CACF+B,SAAQ,QACR5F,MAAO,CAAEkE,KAAM1B,KAGjBd,EAAAC,EAAAC,cAAA,OAAKe,UAAU,aAAaH,OAMpCd,EAAAC,EAAAC,cAAA,OAAKkC,MAAO,CAAC+B,MAAM,QAAQC,UAAU,SAAS/B,UAAU,SAAxD,wBCpCKgC,0LAdX,OACErE,EAAAC,EAAAC,cAAA,OAAKe,UAAU,QACfjB,EAAAC,EAAAC,cAACgC,EAAA,EAAD,KACElC,EAAAC,EAAAC,cAACoE,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAW/B,IACjC1C,EAAAC,EAAAC,cAACoE,EAAA,EAAD,CACEC,KAAK,QACLE,UAAWnC,aARHd,IAAMC,YCOJiD,QACW,cAA7BC,OAAOtF,SAASuF,UAEe,UAA7BD,OAAOtF,SAASuF,UAEhBD,OAAOtF,SAASuF,SAASC,MACvB,2DCbNC,IAASC,OAAO/E,EAAAC,EAAAC,cAAC8E,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM3F,KAAK,SAAA4F,GACjCA,EAAaC","file":"static/js/main.0a097e21.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./black.css\";\r\nimport Slider from \"react-slick\";\r\nimport axios from \"axios\";\r\n\r\nclass Bot extends React.Component {\r\n  state = {\r\n    tamps: []\r\n  };\r\n  componentDidMount() {\r\n    var r =\r\n      \"https://openweathermap.org/data/2.5/forecast/hourly?\" +\r\n      this.props.location +\r\n      \"&appid=b6907d289e10d714a6e88b30761fae22\";\r\n    console.log(r);\r\n    axios.get(r).then(res => {\r\n      this.setState({\r\n        tamps: res.data.list\r\n      });\r\n    });\r\n}\r\n\r\n \r\n  /*time*/\r\n  time = val => {\r\n  \r\n\r\n    var dateObj = new Date(val * 1000);\r\n    var utcString = dateObj.toUTCString();\r\n    var r = utcString.slice(-12, -7);\r\n\r\n    return r;\r\n  };\r\n\r\n  /*time*/\r\n  /*image*/\r\n  icon = (id, size) => {\r\n    var nc = \" \";\r\n\r\n    switch (id) {\r\n      case \"clear sky\":\r\n        nc = \"fas fa-sun\";\r\n        break;\r\n      case \"few clouds\":\r\n        nc = \"fas fa-cloud-sun\";\r\n        break;\r\n      case \"scattered clouds\":\r\n        nc = \"fas fa-cloud\";\r\n        break;\r\n      case \"broken clouds\":\r\n        nc = \"fas fa-cloud\";\r\n        break;\r\n      case \"shower rain\":\r\n        nc = \"fas fa-cloud-showers-heavy\";\r\n        break;\r\n      case \"rain\":\r\n        nc = \"fas fa-cloud-sun-rain\";\r\n        break;\r\n      case \"thunderstorm\":\r\n        nc = \"fas fa-cloud-meatball\";\r\n        break;\r\n      case \"snow\":\r\n        nc = \"far fa-snowflake\";\r\n        break;\r\n      case \"mist\":\r\n        nc = \"fas fa-smog\";\r\n        break;\r\n\r\n      default:\r\n        nc = \"iundefined\";\r\n    }\r\n\r\n    var r = nc + \" \" + size + \" color\";\r\n    return r;\r\n  };\r\n  /*icon */\r\n  render() {\r\n    var settings = {\r\n      infinite: true,\r\n      slidesToShow: 3,\r\n      slidesToScroll: 1,\r\n      centerMode: true,\r\n      responsive: [\r\n        {\r\n          breakpoint: 100,\r\n          settings: {\r\n            arrows: false,\r\n            centerMode: true,\r\n            centerPadding: \"40px\",\r\n            slidesToShow: 3\r\n          }\r\n        },\r\n        {\r\n          breakpoint: 50,\r\n          settings: {\r\n            arrows: false,\r\n            centerMode: true,\r\n            centerPadding: \"60px\",\r\n            slidesToShow: 0\r\n          }\r\n        }\r\n      ]\r\n    };\r\n    return (\r\n      <Slider {...settings}>\r\n        {this.state.tamps.slice(0, 8).map(temp => (\r\n          <div key={temp.dt}>\r\n            <div className=\"sb\">\r\n              <div className=\"centre col\">\r\n                <div className=\"fontmini  \">{temp.dt_txt.slice(0, 10)}</div>\r\n                <div className=\"fontmini  \">{this.time(temp.dt)}</div>\r\n\r\n                <div className=\"font  margin10 \">\r\n                  {Math.trunc(temp.main.temp) + \"Â°C\"}\r\n                </div>\r\n\r\n                <div>\r\n                  <hr></hr>\r\n                </div>\r\n                <div className=\" margin10 \">\r\n                  <i\r\n                    className={this.icon(temp.weather[0].description, \"fa-2x\")}\r\n                  ></i>\r\n                </div>\r\n                <div className=\"row\"></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </Slider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Bot;\r\n","import React from \"react\";\r\nimport \"./black.css\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Main extends React.Component {\r\n  /*GET */\r\n  state = {};\r\n\r\n  componentDidMount() {\r\n    var r =\r\n      \"https://openweathermap.org/data/2.5/weather?\" +\r\n      this.props.location +\r\n      \"&appid=b6907d289e10d714a6e88b30761fae22\";\r\n    console.log(r);\r\n    axios.get(r).then(res => {\r\n      this.setState({\r\n        name: res.data.name,\r\n        temp: res.data.main.temp,\r\n        sunset: res.data.sys.sunset,\r\n        wind: res.data.wind.speed,\r\n        type: res.data.sys.type,\r\n        icon: res.data.weather[0].description\r\n      });\r\n    });\r\n  }\r\n\r\n  /*GET*/\r\n\r\n  /*time*/\r\n  time = val => {\r\n    var dateObj = new Date(val * 1000);\r\n    var utcString = dateObj.toUTCString();\r\n    var r = utcString.slice(-12, -7);\r\n\r\n    return r;\r\n  };\r\n\r\n  /*time*/\r\n  /*NORD */\r\n\r\n  nord = val => {\r\n    var r = \"\";\r\n    if (val === 1) {\r\n      r = \"Today\";\r\n    } else {\r\n      r = \"Tonightaaaa\";\r\n    }\r\n    return r;\r\n  };\r\n\r\n  /*NORD*/\r\n\r\n  /*image*/\r\n  icon = (id, size) => {\r\n    var nc = \" \";\r\n\r\n    switch (id) {\r\n      case \"clear sky\":\r\n        nc = \"fas fa-sun\";\r\n        break;\r\n      case \"few clouds\":\r\n        nc = \"fas fa-cloud-sun\";\r\n        break;\r\n      case \"scattered clouds\":\r\n        nc = \"fas fa-cloud\";\r\n        break;\r\n      case \"broken clouds\":\r\n        nc = \"fas fa-cloud\";\r\n        break;\r\n      case \"shower rain\":\r\n        nc = \"fas fa-cloud-showers-heavy\";\r\n        break;\r\n      case \"rain\":\r\n        nc = \"fas fa-cloud-sun-rain\";\r\n        break;\r\n      case \"thunderstorm\":\r\n        nc = \"fas fa-cloud-meatball\";\r\n        break;\r\n      case \"snow\":\r\n        nc = \"far fa-snowflake\";\r\n        break;\r\n      case \"mist\":\r\n        nc = \"fas fa-smog\";\r\n        break;\r\n\r\n      default:\r\n        nc = \"iundefined\";\r\n    }\r\n\r\n    var r = nc + \" \" + size + \" color\";\r\n    return r;\r\n  };\r\n  /*icon */\r\n  render() {\r\n    return (\r\n      <div>\r\n             <div>\r\n        <Link to=\"/\">search</Link>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"centre col\">\r\n            <p className=\"font\">\r\n              {this.state.name} <i className=\"far fa-building\"></i>\r\n            </p>\r\n            <p className=\"fontmini\">{this.nord(this.state.type)}</p>\r\n         \r\n        </div>\r\n        </div>\r\n\r\n        <div className=\"centre margin15\">\r\n          <i className={this.icon(this.state.icon, \"fa-10x\")}></i>\r\n        </div>\r\n\r\n        <div className=\"row centre  \" style={{marginTop:\"3%\"}}>\r\n          <div className=\"col\">\r\n            <div className=\"col centre\">\r\n              <span className=\"fontmini\"> sunset</span>\r\n            </div>\r\n            <div className=\"col center\">\r\n              <span className=\"font\">{this.time(this.state.sunset)}</span>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col\">\r\n            <div className=\"col centre\">\r\n              <span className=\"fontmini\">Avg temp</span>\r\n            </div>\r\n            <div className=\"col center\">\r\n              <span className=\"font\">{Math.trunc(this.state.temp) + \"Â°C\"}</span>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col\">\r\n            <div className=\"col centre\">\r\n              <span className=\"fontmini\"> Wind</span>\r\n            </div>\r\n            <div className=\"col center\">\r\n              <span className=\"font\"> {this.state.wind}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport \"./black.css\";\r\nimport Bot from \"./bot\";\r\nimport Main from \"./main\";\r\nconst Home = aux => {\r\n  return (\r\n    <div>\r\n      <div className=\"bg\">\r\n        <Main location={\"q=\" + aux.location.state.info} />\r\n      </div>\r\n      <div className=\"bgb\">\r\n        {\" \"}\r\n        <Bot location={\"q=\" + aux.location.state.info} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Home;\r\n","import React from \"react\";\r\nimport \"./black.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nconst Search = () => {\r\n  var car = [];\r\n  car = JSON.parse(localStorage.getItem(\"0\"));\r\n\r\n  const [count, setCount] = useState([]);\r\n  useEffect(() => {\r\n    setCount(car);\r\n  }, []);\r\n\r\n  let x = \"\";\r\n  const keyEnter = event => {\r\n    if (event.key === \"Enter\") {\r\n      x = event.target.value;\r\n      if (count === null) {\r\n        setCount([x]);\r\n      } else {\r\n        setCount([...count, x]);\r\n      }\r\n      localStorage.setItem(\"0\", JSON.stringify(count));\r\n      event.target.value = \"\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"bgs\">\r\n      <div className=\"container\">\r\n        <div className=\"centre\">\r\n          <label className=\"font\">search</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"search\"\r\n            name=\"search\"\r\n            onKeyPress={keyEnter}\r\n          ></input>\r\n        </div>\r\n\r\n        {count ? (\r\n          count.map(temp => {\r\n            return (\r\n              <div key={Math.random() * 100} className=\"box\">\r\n                <Link\r\n                  to={{\r\n                    pathname: `/Home`,\r\n                    state: { info: temp }\r\n                  }}\r\n                >\r\n                  <div className=\"boxs font\">{temp}</div>\r\n                </Link>\r\n              </div>\r\n            );\r\n          })\r\n        ) : (\r\n          <div style={{color:\"white\",textAlign:\"center\",marginTop:\"50px\"}}>Loading...</div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Search;\r\n","import React from \"react\";\r\nimport Home from \"./Component/Home\";\r\nimport Search from \"./Component/search\";\r\nimport { HashRouter as Router, Route } from \"react-router-dom\";\r\nimport \"./card.css\";\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"card\">\r\n      <Router>\r\n        <Route path=\"/\" exact component={Search} />\r\n        <Route\r\n          path=\"/Home\"\r\n          component={Home}\r\n        />\r\n      </Router>\r\n</div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}